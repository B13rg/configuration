{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Generate SSH key": {
		"scope": "shell",
		"prefix": "sshg",
		"body": [
			"ssh-keygen -t ed25519"
		],
		"description": "Generate a new ed25519 key"
	},
	"Copy SSH Key": {
		"scope": "shell",
		"prefix": "sshc",
		"body": [
			"ssh-copy-id -i ~/.ssh/tatu-key-ecdsa $1"
		],
		"description": "Copies SSH key to a target host $1"
	},
	"Generate and Copy SSH Key": {
		"scope": "shell",
		"prefix": "log",
		"body": [
			"ssh-keygen -t ed25519 -f ~/.ssh/$1_ed25519",
			"ssh-copy-id -i ~/.ssh/$1_ed25519 $2@$1"
		],
		"description": "Log output to console. $1: Hostname $2: Username"
	},
	"Detect Scene changes in video": {
		"scope": "ffmpeg",
		"prefix": "log",
		"body": [
			"ffmpeg -i inputvideo.mp4 -filter_complex \"select='gt(scene,0.3)',metadata=print:file=time.txt\" -vsync vfr img%03d.png"
		],
		"description": "Saves first frame and timecodes to file."
	},
	"Replace username and email in git log": {
		"scope": "git",
		"prefix": "log",
		"body": [
			"git filter-branch --env-filter '
WRONG_EMAIL="bbyers@null.com"
NEW_NAME="b13rg"
NEW_EMAIL="b13rg@null.com"

if [ "$GIT_COMMITTER_EMAIL" = "$WRONG_EMAIL" ]
then
    export GIT_COMMITTER_NAME="$NEW_NAME"
    export GIT_COMMITTER_EMAIL="$NEW_EMAIL"
fi
if [ "$GIT_AUTHOR_EMAIL" = "$WRONG_EMAIL" ]
then
    export GIT_AUTHOR_NAME="$NEW_NAME"
    export GIT_AUTHOR_EMAIL="$NEW_EMAIL"
fi
' --tag-name-filter cat -- --branches --tags"
		],
		"description": "Saves first frame and timecodes to file."
	}
}